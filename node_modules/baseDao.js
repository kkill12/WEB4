var Q = require('q');
var conn = require('db');
var content = require('content');

//公共值测试

var colname = null;
var tabledata = null;
var listdata = null;
var rowdata = null;
var primarykey = null;
var sqlstr = null;
var tablename = null;
var sqlarr = {findpar:''};
var findresult = null;

//构造函数
function baseDao(){
	console.log('init ......');
}
module.exports= baseDao;


//函数集合
//init函数负责将页面与后台表重叠的数据放入
baseDao.prototype.fun = {
	setFindpar:function(str){
		sqlarr.findpar =str;
	},
	setPrimarykey:function(str){
		primarykey = str;
	},
	setTableName:function(str){
		tablename = str;
	},
	init:function(req){
		/*
		*1、从数据库将字段取出，形成列名数组
		*2、将数组变成值为空的JSON数据
		*3、利用传来的req将body或query中的数据赋予数组
		*.......初始化除了find查询，其他主键不可为空
		*/
		console.log('getCol comming.........'+content._COLSQL);
		//注意函数的准确用法
		var defer = Q.defer();
		//取出本表所有存在的字段
		conn.query(content._COLSQL,tablename,function(err,data){
			if(err){
				defer.reject(err);
			}else{
				//数据库字符串转换成
				colname = content.tArr(data);
				//初始化表数据库列表
				tabledata = content.tCol(data);
				//将页面post中的数据初始化进入tabledata中
				if(req.body[primarykey]!=null){
					for (var i=0;i<colname.length;i++){
						tabledata[colname[i]] = req.body[colname[i]];
					}
				}else{
					for (var i=0;i<colname.length;i++){
						tabledata[colname[i]] = req.query[colname[i]];
					}
				}
				console.log(tabledata);
				defer.resolve();
			}
		});
		return defer.promise;
	},
	insert:function(){
		console.log('inser comming ........');
		var defer = Q.defer();
		tabledata[primarykey]='uuid_short()';
		//回调函数+唤醒
		conn.query('INSERT INTO ' +tablename+ ' SET  ?',tabledata,function(err,result){
			if(err){
				defer.reject(err);
			}else{

				defer.resolve(result);
			}
		});
		return defer.promise;
	},
	update:function(){
		var sql = 'UPDATE '  +tablename +' SET ? WHERE  ' + primarykey + '="'+tabledata[primarykey]+'"';
		console.log('update comming .......'+sql);
		var defer = Q.defer();
		conn.query(sql,tabledata,function(err,result){
			if(err){
				defer.reject(err);
			}else{
				defer.resolve(result);
			}
		});
		return defer.promise;
	},
	delete:function(){
		var sql = 'DELETE FROM '+tablename+' WHERE ' + primarykey + '="'+tabledata[primarykey]+'"';
		console.log('delete comming .......'+ sql);
		var defer = Q.defer();
		conn.query(sql,function(err,result){
			if(err){
				defer.reject(err);
			}else{
				defer.resolve(result);
			}			
		});
		return defer.promise;
	},
	find:function(){ //调用查询方法，必须先运行setFindpar设置参数
		var  sql = 'SELECT * FROM '+tablename+' WHERE ';
		console.log('find comming .......'+ sql);
		var defer = Q.defer();
		conn.query(sql,sqlarr.findpar,function(err,result){
			if(err){
				defer.reject(err);
			}else{
				defer.resolve(result);
			}	
		});
		return defer.promise;
	},
	close:function(){
		console.log('database end()');
		//conn.end();
	}
}


